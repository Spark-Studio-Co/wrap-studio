---
import Heading from "../../shared/ui/heading/heading.astro";
import Paragraph from "../../shared/ui/paragraph/paragraph.astro";
import { ServiceCard3d } from "../../features/services/ui/service-card/service-card";
import { ServiceCardMob } from "@/features/services/ui/service-card/service-card-mob.tsx";
import { BigServiceCard } from "@/features/services/ui/big-service-card/big-service-card";

import { services } from "../../features/services/model/services";
---

<section
    class="max-w-[90%] lg:max-w-[80%] 3xl:max-w-[1560px] 4xl:max-w-[1540px] flex items-center flex-col mx-auto pt-[64px]"
    id="services"
>
    <div
        id="serviceHeadingWrapper"
        class="flex flex-col lg:flex-row items-center lg:items-start lg:justify-between w-full lg:mt-8 lg:mb-8"
    >
        <div
            id="heading"
            class="opacity-0 translate-y-10 lg:translate-y-0 lg:translate-x-[-50px]"
        >
            <Heading level={2} text="// Услуги" />
        </div>
        <div
            id="paragraph"
            class="opacity-0 translate-y-10 lg:translate-y-0 lg:translate-x-[50px] mt-8 mb-8 lg:mt-0 lg:mb-0 sm:w-[80%] md:w-[60%] xl:w-[55%] 2xl:w-[50%] 3xl:w-[45%] 4xl:w-[40%]"
        >
            <Paragraph
                text="Все, что нужно для защиты и безупречного вида вашего автомобиля."
                variant="main"
                align="lg:text-right text-center"
            />
        </div>
    </div>

    <div id="serviceCardsMob" class="w-full">
        {
            services.map((service, index) => (
                <div class="service-card-mob opacity-0 translate-y-10 flex flex-col items-center mb-8 last:mb-0 w-full lg:hidden">
                    <ServiceCardMob
                        {...service}
                        index={index}
                        client:only="react"
                    />
                </div>
            ))
        }
    </div>

    <div
        id="serviceCardsDesktop"
        class="lg:grid hidden grid-rows-2 w-full 3xl:hidden"
    >
        <div class="grid grid-cols-3 gap-x-4">
            {
                services.slice(0, 3).map((service, index) => (
                    <div class="service-card opacity-0 translate-y-10">
                        <ServiceCard3d
                            {...service}
                            index={index}
                            client:only="react"
                        />
                    </div>
                ))
            }
        </div>
        <div class="grid grid-cols-2 gap-4">
            {
                services.slice(3, 5).map((service, index) => (
                    <div class="service-card opacity-0 translate-y-10">
                        <ServiceCard3d
                            {...service}
                            index={index + 3}
                            className="col-span-1 w-full"
                            client:only="react"
                        />
                    </div>
                ))
            }
        </div>
    </div>

    <!-- Большая карточка -->
    <div
        id="extendedPriceCard"
        class="service-card hidden w-full 3xl:flex flex-col mt-[85px] opacity-0 translate-y-10"
    >
        <div class="flex justify-between w-full gap-x-4">
            {
                services.slice(0, 4).map((service, index) => (
                    <div class="service-card opacity-0 translate-y-10">
                        <ServiceCard3d
                            {...service}
                            index={index}
                            client:only="react"
                        />
                    </div>
                ))
            }
        </div>
        <BigServiceCard client:only="react" />
    </div>
</section>

<!-- GSAP-анимация -->
<script>
    import { gsap } from "gsap";
    import { ScrollTrigger } from "gsap/ScrollTrigger";

    gsap.registerPlugin(ScrollTrigger);

    document.addEventListener("DOMContentLoaded", () => {
        const isMobile = window.innerWidth < 1024; // lg breakpoint

        gsap.fromTo(
            "#heading",
            { opacity: 0, y: isMobile ? 20 : 0, x: isMobile ? 0 : -50 },
            {
                opacity: 1,
                y: 0,
                x: 0,
                duration: 1.2,
                ease: "power3.out",
                scrollTrigger: {
                    trigger: "#serviceHeadingWrapper",
                    start: "top 85%",
                    toggleActions: "play none none none",
                },
            },
        );

        // Анимация описания (Paragraph)
        gsap.fromTo(
            "#paragraph",
            { opacity: 0, y: isMobile ? 20 : 0, x: isMobile ? 0 : 50 },
            {
                opacity: 1,
                y: 0,
                x: 0,
                duration: 1.2,
                ease: "power3.out",
                scrollTrigger: {
                    trigger: "#serviceHeadingWrapper",
                    start: "top 85%",
                    toggleActions: "play none none none",
                },
            },
        );

        // Анимация мобильных карточек
        const mobileCards =
            gsap.utils.toArray<HTMLElement>(".service-card-mob");
        gsap.fromTo(
            mobileCards,
            { opacity: 0, y: 30 },
            {
                opacity: 1,
                y: 0,
                duration: 1.5,
                ease: "power3.out",
                stagger: 0.2,
                scrollTrigger: {
                    trigger: "#serviceCardsMob",
                    start: "top 65%",
                    toggleActions: "play none none none",
                },
            },
        );

        const desktopCards = gsap.utils.toArray<HTMLElement>(".service-card");
        gsap.fromTo(
            desktopCards,
            { opacity: 0, y: 20 },
            {
                opacity: 1,
                y: 0,
                duration: 1.2,
                ease: "power3.out",
                stagger: 0.2,
                scrollTrigger: {
                    trigger: "#serviceCardsDesktop",
                    start: "top 85%",
                    toggleActions: "play none none none",
                },
            },
        );

        gsap.fromTo(
            "#extendedPriceCard",
            { opacity: 0, y: 30, scale: 0.95 },
            {
                opacity: 1,
                y: 0,
                scale: 1,
                duration: 2,
                scrollTrigger: {
                    trigger: "#extendedPriceCard",
                    start: "top 100%",
                    toggleActions: "play none none none",
                },
            },
        );
    });
</script>
